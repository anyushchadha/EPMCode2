<?xml version="1.0" encoding="utf-8"?>
<!--For more information on how to configure your ASP.NET application, please visit  http://go.microsoft.com/fwlink/?LinkId=152368 -->
<configuration>
  <configSections>
    <sectionGroup name="elmah">
      <section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah" />
      <section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah" />
      <section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah" />
      <section name="errorFilter" requirePermission="false" type="Elmah.ErrorFilterSectionHandler, Elmah" />
    </sectionGroup>
    <section name="resizer" type="ImageResizer.ResizerSection" requirePermission="false" />
    <section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net" />
  </configSections>
  <location path="." inheritInChildApplications="false">
    <connectionStrings>
      <remove name="ConnectionString" />
      <remove name="elmah-sqlserver" />
      <remove name="Xby2.Xif.Properties.Settings.xifConnectionString" />
      <remove name="MapForceConnectionString" />
      <!-- Please do NOT check-in any local changes related to your troubleshooting or you leverage a different SQL Server for development purposes-->
      <!---You can easily avoid modifying configuration by adding host file entry if you can't access this SQL server for your development purposes -->
      <add name="ConnectionString" connectionString="Data Source=ciserver1.eyefinity.com;Initial Catalog=Blink;User ID=it2;Password=it2" providerName="System.Data.SqlClient" />
      <add name="elmah-sqlserver" connectionString="Data Source=ciserver1.eyefinity.com;Initial Catalog=AL_SYS;Persist Security Info=True;User ID=it2;Password=it2" providerName="System.Data.SqlClient" />
      <add name="Xby2.Xif.Properties.Settings.xifConnectionString" connectionString="Server=ciserver1.eyefinity.com;Initial Catalog=Xif_Framework;User ID=it2;Password=it2;Enlist=false" providerName="System.Data.SqlClient" />
      <add name="MapForceConnectionString" connectionString="Provider=SQLOLEDB.1;Data Source=ciserver1.eyefinity.com;Initial Catalog=Blink;User ID=it2;Password=it2" />
    </connectionStrings>
  </location>
  <location path="." inheritInChildApplications="false">
    <appSettings>
      <add key="webpages:Version" value="3.0.0.0" />
      <add key="webpages:Enabled" value="false" />
      <add key="ClientValidationEnabled" value="true" />
      <add key="UnobtrusiveJavaScriptEnabled" value="true" />
      <add key="PreserveLoginUrl" value="true" />
      <add key="DefaultOfficeNumber" value="999" />
      <add key="DefaultUserPassword" value="start123" />
      <add key="SchedulerUrl" value="https://localhost:44302/" />
      <add key="ClaimsManagementUrl" value="https://localhost:44304/" />
      <add key="LegacyAdminUrl" value="https://localhost:44305/" />
      <add key="LegacyOrdersUrl" value="https://localhost:44302/" />
      <add key="DocumentLocation" value="C:\INETPUB\WWWROOT\DOCUMENTS\" />
      <!-- Once you set value for UserNamePlaceHolderValue please do not modify, -->
      <!-- if you decide to do so you may need to support your changes with DB update script to update each username in Users table-->
      <!-- If UserNamePlaceHolderValue key does not exists in web.config it will assume default value of "PM" -->
      <add key="UserNamePlaceHolderValue" value="PM" />
      <add key="PasswordHistory" value="5" />
      <add key="EyefinityKey" value="ALTEST-STAGING" />
      <add key="EyefinityAccessToken" value="CIPP7961" />
      <add key="workflowDefinitionsPath" value="~/Workflow" />
      <add key="InsurancePolicyGroup" value="172" />
      <add key="dhx_license" value="deepa.swamy@eyefinity.com-commercial--Kp8ZezJkAxU1hhPAuFh4h1vpDBXFsM1cRdR/Stzu+JZq6/Iyikeb5FMi4r3BA+TvrD3ghCWGR0YmfIPYNQ5caw==" />
      <add key="ForbiddenViewPath" value="~/Views/Login/Forbidden.cshtml" />
      <add key="vs:EnableBrowserLink" value="false" />
      <add key="claimsXsltPath" value="S:\Projects\HFO\trunk\Billing\PDFGen\UnitTests\ClaimXSLT.xslt" />
      <add key="officeData.ID" value="999" />
      <add key="BlinkSAAS" value="true" />
      <add key="BlinkSelect" value="false" />
      <add key="BlinkTest" value="false" />
      <add key="ALogicWorkingFolder" value="C:\ALogic Working\Billing Files" />
      <add key="ProcessingId" value="T" />
      <!-- T=Test, D=Debug, P=Prod -->
      <!-- 
        When changing from test to production PMI URLs you may need to update the password 
        for your office in the SSOffice table.
        The list of credentials can be found in confluence FORTRESS.
    -->
      <add key="VSPEligibilityRequest" value="https://secure.eyefinity.com/servlet/PMIServlet?message===|PMIVer=1.0|FMVer=1.0|Vsv=1.0|Vid=AcuityLogic|Vpw=Mu6VoSjk" />
      <!--<add key="VSPEligibilityRequest" value="https://sm10.eyefinity.com/servlet/PMIServlet?message===|PMIVer=1.0|FMVer=1.0|Vsv=1.0|Vid=acuitylogic|Vpw=ITiYlSE9" />-->
      <add key="FalconConfigurationURL" value="https://ciserver1.eyefinity.com/Falcon/FalconService/api/EHR/Configuration/Office" />
      <add key="FalconConfigurationExamURL" value="https://ciserver1.eyefinity.com/falcon/restservice/api/rest/newexamnotification" />
      <add key="FalconSchedulerURL" value="https://ciserver1.eyefinity.com/Falcon/RestService/api/Appointment/" />
      <!-- ### NEW INDIVIDUAL CALL METHOD OF UPDATING EEHR QUICKLIST - USE NEW URL AND VERSION ONCE READY TO SWITCH-->
      <add key="FalconSchedulerVersion" value="1" />
      <add key="FalconPatientURL" value="https://ciserver1.eyefinity.com/Falcon/RestService/api/Rest/Patient" />
      <add key="FalconMergePatientURL" value="https://ciserver1.eyefinity.com/Falcon/RestService/api/Rest/MergePatient" />
      <!-- EEHR URLsVSP
        DEV (CIServer / Staging): emaeye.com
        Sandbox: eyefinityehrtraining.com
        Prod: eyefinityehr.com
    -->
      <add key="EEHR_URL" value="emaeye.com" />
      <!--<add key="EEHR_URL" value="eyefinityehrtraining.com"/>-->
      <!--<add key="EEHR_URL" value="eyefinityehr.com" />-->
      <!-- Magnolia CMS-->
      <add key="MagnoliaURL_Login" value="http://www.eyefinity.com/eyefinity/practice-management/eyefinity-practice-management/epm-login-messaging" />
      <add key="MagnoliaURL_MessageCenter" value="http://www.eyefinity.com/eyefinity/practice-management/eyefinity-practice-management/epm-login-messaging/message-center-development" />
      <!-- Test Automation
        DEV (CIServer, etc): set to "on" by default for QA to use automation test on IE
        Sandbox: set to "off" b/c EPM will not be supporting IE.
        Prod: set to "on" b/c EPM will not be supporting IE.
    -->
      <add key="TestAutomation" value="on" />
      <!--<add key="Automation" value="off" />-->
      <add key="GoogleAnalytics" value="off" />
      <add key="WalkMeThroughUrl" value="https://cdn.walkme.com/users/06cd7ca38835444bb5f214b4a70c5f22/test/walkme_06cd7ca38835444bb5f214b4a70c5f22_https.js" />
      <add key="NewABBCatalog" value="true" />
      <!-- Sandbox OAuth URL-->
      <add key="OAuthUrl" value="https://api-sandbox.eyefinity.com/as/token.oauth2" />
      <!-- Staging OAuth URL-->
      <!--<add key="OAuthUrl" value="https://api-staging.eyefinity.com/as/token.oauth2"/>-->
      <!-- Production OAuth URL-->
      <!--<add key="OAuthUrl" value="https://api.eyefinity.com/as/token.oauth2"/>-->
      <!--Sandbox OAuth Token Parameters - Client Id, Secret Key & Base64 ClientID + Secret-->
      <add key="EnableOAuth" value="true" />
      <add key="ClientId" value="epm" />
      <add key="SecretKey" value="PpwM7Xwy" />
      <!--Not Used but provisioned and might be needed for future use-->
      <add key="Base64ClientIdPlusSecret" value="ZXBtOlBwd003WHd5" />
      <add key="OverrideOAuthCreds" value="true" />
      <add key="OAuthUser" value="AdminDemo01_pm_Demo01_pm" />
      <add key="OAuthPassword" value="Qa1234567" />
      <add key="ElasticSearchURL" value="https://api.vsp.com/catalog-api-web/frames?query={0}" />
      <!-- EEHR Message Tracking Settings when exams are viewed or Listed Start-->
      <add key="EhrMessageTrackingUrl" value="https://ciserver1.eyefinity.com/ALSupport/api/EhrMessageInfo" />
      <add key="PmMessageTrackingUrl" value="https://ciserver1.eyefinity.com/ALSupport/api/PmMessageInfo" />
      <add key="IsEhrMessageTracking" value="true" />
      <add key="IgnoreSSLCertificateForMessageTracking" value="true" />
      <!-- EEHR Message Tracking Settings when exams are viewed or Listed End-->
      <add key="EhrExamIdActivationDate" value="04/29/2016" />
      <add key="TempStorageExpirationDays" value="2592000" />
      <add key="MaxFramesFromSearch" value="1000" />
      <!-- if you run into certificate mismatch /errors with elastic search url then set the following value to true to bypass cert related errors-->
      <add key="ElasticSearchCertificateSkipValidationCheck" value="false" />
      <!-- Work around for Diasbled protocols and weak ciphers-->
      <add key="ElasticSearchSecurityProtocols" value="true" />
    </appSettings>
  </location>
  <location path="." inheritInChildApplications="false">
    <system.web>
      <customErrors mode="RemoteOnly">
        <error redirect="~/Login/Error" statusCode="500" />
      </customErrors>
      <httpCookies httpOnlyCookies="true" requireSSL="true" />
      <httpRuntime targetFramework="4.6.1" enableVersionHeader="false" />
      <compilation debug="false" targetFramework="4.6.1" enablePrefetchOptimization="true" profileGuidedOptimizations="None" />
      <authentication mode="Forms">
        <forms name=".ASPXAUTH" loginUrl="~/Login" domain="" timeout="2880" requireSSL="true" cookieless="UseCookies" enableCrossAppRedirects="true" path="/" />
      </authentication>
      <sessionState cookieName="ASP.NET_SessionId" mode="Custom" customProvider="SqlInMemoryProvider">
        <providers>
          <!-- Please do NOT check-in any local changes related to your troubleshooting or you leverage a different SQL Server for development purposes-->
          <!---You can easily avoid modifying configuration by adding host file entry if you can't access this SQL server for your development purposes -->
          <add name="SqlInMemoryProvider" type="Microsoft.Web.SessionState.SqlInMemoryProvider" connectionString="data source=ciserver1.eyefinity.com;initial catalog=EPMSessionState;User ID=it2;Password=it2;" />
        </providers>
      </sessionState>
      <roleManager cookieName=".ASPXROLES" defaultProvider="Security" enabled="true" cacheRolesInCookie="true">
        <providers>
          <clear />
          <add name="Security" type="Eyefinity.PracticeManagement.Common.Security" />
        </providers>
      </roleManager>
      <machineKey validationKey="674A57782B96A860CE3FA32F2492AEA39E86DF90E81172434823B0E4FCDABD3620D3333FEB013A9D170CD5A5237D810EFCE36428E3C3B738B3F9CD9B466E0658" decryptionKey="8F0E9753195EEF4827E0654F87EF931476BD8F0FD721FC9727A84831511DC47A" validation="SHA1" decryption="AES" compatibilityMode="Framework45" />
      <pages>
        <namespaces>
          <add namespace="System.Web.Helpers" />
          <add namespace="System.Web.Mvc" />
          <add namespace="System.Web.Mvc.Ajax" />
          <add namespace="System.Web.Mvc.Html" />
          <add namespace="System.Web.Optimization" />
          <add namespace="System.Web.Routing" />
          <add namespace="System.Web.WebPages" />
        </namespaces>
      </pages>
      <httpModules>
        <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" />
        <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" />
        <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" />
        <add name="ImageResizingModule" type="ImageResizer.InterceptModule" />
      </httpModules>
    </system.web>
  </location>
  <location path="." inheritInChildApplications="false">
    <system.webServer>
      <defaultDocument enabled="false" />
      <rewrite>
        <rules>
          <rule name="HTTP to HTTPS redirect for all requests" enabled="true" stopProcessing="true">
            <match url="(.*)" />
            <conditions>
              <add input="{HTTPS}" pattern="off" ignoreCase="true" />
            </conditions>
            <action type="Redirect" redirectType="Found" url="https://{HTTP_HOST}/{REQUEST_URI}" />
          </rule>
        </rules>
      </rewrite>
      <handlers>
        <remove name="WebDAV" />
        <remove name="OPTIONSVerbHandler" />
        <remove name="TRACEVerbHandler" />
        <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" />
        <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
        <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
        <add name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness32" responseBufferLimit="0" />
        <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
        <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
        <add name="Browser Link for HTML" path="*.html" verb="*" type="System.Web.StaticFileHandler, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" resourceType="File" preCondition="integratedMode" />
      </handlers>
      <validation validateIntegratedModeConfiguration="false" />
      <!-- Enable gzip and deflate HTTP compression. See http://www.iis.net/configreference/system.webserver/urlcompression
         doDynamicCompression - enables or disables dynamic content compression at the site, application, or folder level.
         doStaticCompression - enables or disables static content compression at the site, application, or folder level.
         dynamicCompressionBeforeCache - specifies whether IIS will dynamically compress content that has not been cached.
                                         When the dynamicCompressionBeforeCache attribute is true, IIS dynamically compresses
                                         the response the first time a request is made and queues the content for compression.
                                         Subsequent requests are served dynamically until the compressed response has been
                                         added to the cache directory. Once the compressed response is added to the cache
                                         directory, the cached response is sent to clients for subsequent requests. When
                                         dynamicCompressionBeforeCache is false, IIS returns the uncompressed response until
                                         the compressed response has been added to the cache directory.
                                         Note: This is set to false in Debug mode to enable Browser Link to work when debugging.
                                         The value is set to true in Release mode (See web.Release.config).-->
      <urlCompression doDynamicCompression="true" doStaticCompression="true" dynamicCompressionBeforeCache="false" />
      <httpErrors errorMode="DetailedLocalOnly" existingResponse="PassThrough">
        <remove statusCode="403" />
      </httpErrors>
      <modules>
        <remove name="WebDAVModule" />
        <add name="NHibernateSessionPerRequest" type="Eyefinity.PracticeManagement.Data.Infrastructure.NHibernateSessionPerRequest" />
        <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" preCondition="managedHandler" />
        <add name="ImageResizingModule" type="ImageResizer.InterceptModule" />
      </modules>
      <httpCompression directory="%SystemDrive%\inetpub\temp\IIS Temporary Compressed Files" minFileSizeForComp="1024">
        <scheme name="gzip" dll="%Windir%\system32\inetsrv\gzip.dll" />
        <dynamicTypes>
          <add mimeType="text/*" enabled="true" />
          <add mimeType="message/*" enabled="true" />
          <add mimeType="application/x-javascript" enabled="true" />
          <!-- Compress XML files -->
          <add mimeType="application/xml" enabled="true" />
          <!-- Compress JavaScript files -->
          <add mimeType="application/javascript" enabled="true" />
          <!-- Compress JSON files -->
          <add mimeType="application/json" enabled="true" />
          <!-- Compress SVG files -->
          <add mimeType="image/svg+xml" enabled="true" />
          <!-- Compress RSS feeds -->
          <add mimeType="application/rss+xml" enabled="true" />
          <!-- Compress Atom feeds -->
          <add mimeType="application/atom+xml" enabled="true" />
          <add mimeType="*/*" enabled="false" />
        </dynamicTypes>
        <staticTypes>
          <add mimeType="text/*" enabled="true" />
          <add mimeType="message/*" enabled="true" />
          <add mimeType="application/x-javascript" enabled="true" />
          <add mimeType="application/atom+xml" enabled="true" />
          <add mimeType="application/xaml+xml" enabled="true" />
          <!-- Compress ICO icon files (Note that most .ico files are uncompressed but there are some that can contain PNG compressed images. If you are doing this, remove this line). -->
          <add mimeType="image/x-icon" enabled="true" />
          <!-- Compress XML files -->
          <add mimeType="application/xml" enabled="true" />
          <add mimeType="application/xml; charset=UTF-8" enabled="true" />
          <!-- Compress JavaScript files -->
          <add mimeType="application/javascript" enabled="true" />
          <!-- Compress JSON files -->
          <add mimeType="application/json" enabled="true" />
          <!-- Compress SVG files -->
          <add mimeType="image/svg+xml" enabled="true" />
          <!-- Compress EOT font files -->
          <add mimeType="application/vnd.ms-fontobject" enabled="true" />
          <!-- Compress TTF font files - application/font-ttf will probably be the new correct MIME type. IIS still uses application/x-font-ttf. -->
          <!--<add mimeType="application/font-ttf" enabled="true" />-->
          <add mimeType="application/x-font-ttf" enabled="true" />
          <!-- Compress OTF font files - application/font-opentype will probably be the new correct MIME type. IIS still uses font/otf. -->
          <!--<add mimeType="application/font-opentype" enabled="true" />-->
          <add mimeType="font/otf" enabled="true" />
          <!-- Compress RSS feeds -->
          <add mimeType="application/rss+xml" enabled="true" />
          <add mimeType="application/rss+xml; charset=UTF-8" enabled="true" />
          <add mimeType="*/*" enabled="false" />
        </staticTypes>
      </httpCompression>
      <security>
        <!-- Enable Dynamic IP Security. During a Denial of Service (DoS) attack, a very simple and small 403.501 or 403.502 Forbidden static error page is displayed.
           See http://www.iis.net/configreference/system.webserver/security/dynamicipsecurity -->
        <!-- enableLoggingOnlyMode - Specifies that IIS will log requests from the client that would be rejected without actually rejecting them.
                                   After running your site for a while, and searching the IIS logs for 403.501 and 403.502 errors, set sensible limits below.
                                   Note: Google and Bing make large numbers of requests at times and can look like a DoS attack. -->
        <!-- enableProxyMode - Set this to true if you are behind a proxy. -->
        <dynamicIpSecurity enableLoggingOnlyMode="true">
          <!-- maxConcurrentRequests - The number of concurrent HTTP connection requests from a client that will result in the client being blocked. -->
          <denyByConcurrentRequests enabled="true" maxConcurrentRequests="20" />
          <!-- maxRequests - The number of requests received from a specific client over a specified period of time that will result in the client being blocked (if the check is enabled). -->
          <!-- requestIntervalInMilliseconds - The period of time (in milliseconds) that is used to determine the request rate for a specific client. This rate is used to determine whether the receive rate exceeds that the maximum specified, resulting in the client being blocked (if the check is enabled). -->
          <denyByRequestRate enabled="true" maxRequests="30" requestIntervalInMilliseconds="300" />
        </dynamicIpSecurity>
        <requestFiltering>
          <!-- maxAllowedContentLength - Specifies the maximum length of content in a request, in bytes. The default value is 30000000 (~28.6 MB) and has
                                       been reduced to 1048576 (1 MB). This setting is for IIS while the httpRuntime maxRequestLength setting is
                                       for ASP.NET, you need to set both to the same value or the smaller number wins (See http://stackoverflow.com/questions/6327452/which-gets-priority-maxrequestlength-or-maxallowedcontentlength). -->
          <!-- maxQueryString - Specifies the maximum length of the query string, in bytes. The default value is 2048. This setting is for IIS while the
                              httpRuntime maxQueryStringLength setting is for ASP.NET, you need to set both to the same value. -->
          <!-- maxUrl - Specifies maximum length of the URL, in bytes. The default value is 4096. This setting is for IIS while the
                      httpRuntime maxUrlLength setting is for ASP.NET, you need to set both to the same value. -->
          <requestLimits maxAllowedContentLength="4194304" maxQueryString="2048" maxUrl="4096" />
        </requestFiltering>
      </security>
      <httpProtocol allowKeepAlive="true">
        <customHeaders>
          <clear />
          <add name="x-frame-options" value="SAMEORIGIN" />
          <add name="Strict-Transport-Security" value="max-age=16070400; includeSubDomains" />
          <remove name="Server" />
        </customHeaders>
      </httpProtocol>
      <staticContent>
        <remove fileExtension=".woff" />
        <mimeMap fileExtension=".woff" mimeType="application/x-font-woff" />
        <remove fileExtension=".ttf" />
        <mimeMap fileExtension=".ttf" mimeType="font/truetype" />
        <remove fileExtension=".otf" />
        <mimeMap fileExtension=".otf" mimeType="font/opentype" />
        <remove fileExtension=".eot" />
        <mimeMap fileExtension=".eot" mimeType="application/vnd.ms-fontobject" />
      </staticContent>
    </system.webServer>
  </location>
  <location path="." inheritInChildApplications="false">
    <system.serviceModel>
      <bindings>
        <basicHttpBinding>
          <binding name="OrderIntegrationPortBinding" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="524288" maxReceivedMessageSize="2147483647" messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true">
            <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
            <security mode="Transport">
              <transport clientCredentialType="None" proxyCredentialType="None" realm="" />
              <message clientCredentialType="UserName" algorithmSuite="Default" />
            </security>
          </binding>
          <binding name="BenefitsEstimationProxyService-3.1.0Soap11Binding" closeTimeout="00:10:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" maxBufferSize="2147483647" maxBufferPoolSize="524288" maxReceivedMessageSize="2147483647">
            <security mode="Transport" />
          </binding>
        </basicHttpBinding>
      </bindings>
      <client>
        <endpoint address="https://testservices.eyefinity.com:443/aloi-1.5/orderIntegration" binding="basicHttpBinding" bindingConfiguration="OrderIntegrationPortBinding" contract="EyefinityOrderIntegrationService.OrderIntegration" name="OrderIntegrationPort" />
        <endpoint address="https://ws.eyefinity.com/services/BenefitsEstimationProxyService-3.1.0.BenefitsEstimationProxyService-3.1.0HttpsSoap11Endpoint" binding="basicHttpBinding" bindingConfiguration="BenefitsEstimationProxyService-3.1.0Soap11Binding" contract="BenefitsEstimationService.BenefitsEstimationProxyService310PortType" name="BenefitsEstimationProxyService-3.1.0HttpsSoap11Endpoint" />
      </client>
    </system.serviceModel>
  </location>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Razor" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages.Razor" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Deployment" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages.Deployment" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Core" publicKeyToken="7cec85d7bea7798e" />
        <codeBase version="4.0.0.0" href="System.Core" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Castle.Windsor" publicKeyToken="407dd0808d44fbdc" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.2.0.0" newVersion="3.2.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Castle.Core" publicKeyToken="407dd0808d44fbdc" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.2.0.0" newVersion="3.2.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http" Version="4.0.0.0" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="nunit.framework" publicKeyToken="96d09a1eb7f44a77" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.6.2.12296" newVersion="2.6.2.12296" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="NHibernate" publicKeyToken="aa95f207798dfdb4" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.4000" newVersion="4.0.0.4000" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="ICSharpCode.SharpZipLib" publicKeyToken="1b03e6acf1164f73" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-0.84.0.0" newVersion="0.84.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="nunit.core.interfaces" publicKeyToken="96d09a1eb7f44a77" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.6.2.12296" newVersion="2.6.2.12296" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="nunit.core" publicKeyToken="96d09a1eb7f44a77" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.6.2.12296" newVersion="2.6.2.12296" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Http" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Antlr3.Runtime" publicKeyToken="eb42632606e9261f" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Iesi.Collections" publicKeyToken="aa95f207798dfdb4" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Formatting" culture="neutral" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-7.0.0.0" newVersion="7.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="itextsharp" publicKeyToken="8354ae6d2174ddca" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.5.11.0" newVersion="5.5.11.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <log4net>
    <!-- Include this to log PMI/BES requests/responses This is being disabled since it's causing issue with Elmah Database growth
    <logger name="IT2.BlinkIntegration.Eyefinity.BESIntegration" additivity="false">
      <level value="DEBUG" />
      <appender-ref ref="elmahappender" />
    </logger>
    <logger name="PmiClient.MemberClient" additivity="false">
      <level value="DEBUG" />
      <appender-ref ref="elmahappender" />
    </logger>
    <logger name="Billing.VspProd.Utility.EligibilityUtility" additivity="false">
      <level value="DEBUG" />
      <appender-ref ref="elmahappender" />
    </logger>
    <logger name="Eyefinity.PracticeManagement.Common.LoggedPmiHttpRequester" additivity="false">
      <level value="DEBUG" />
      <appender-ref ref="elmahappender" />
    </logger>-->
    <appender name="elmahappender" type="elmahappender_log4net.ELMAHAppender, elmahappender_log4net">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%utcdate [thread] %-5level %logger - %message%newline%newline" />
      </layout>
    </appender>
    <root>
      <level value="ERROR" />
      <appender-ref ref="elmahappender" />
    </root>
    <!-- Uncomment Following lines to link it to Nhibernate profiler
    <appender name="NHProfAppender" type="HibernatingRhinos.Profiler.Appender.NHibernate.NHProfAppender, HibernatingRhinos.Profiler.Appender.NHibernateLog4Net">
      <sink value="tcp://127.0.0.1:22897" />
    </appender>
    <logger name="HibernatingRhinos.Profiler.Appender.NHibernate.NHProfAppender.Setup">
      <appender-ref ref="NHProfAppender" />
    </logger>-->
  </log4net>
  <elmah>
    <!-- See http://code.google.com/p/elmah/wiki/SecuringErrorLogPages for more information on remote access and securing ELMAH.-->
    <security allowRemoteAccess="false" />
    <errorLog type="Elmah.SqlErrorLog, Elmah" connectionStringName="elmah-sqlserver" applicationName="WEB1.EPM" />
  </elmah>
  <hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
    <session-factory>
      <property name="dialect">NHibernate.Dialect.MsSql2012Dialect</property>
      <property name="connection.provider">NHibernate.Connection.DriverConnectionProvider</property>
      <property name="connection.driver_class">NHibernate.Driver.SqlClientDriver</property>
      <!-- Please do NOT check-in any local changes related to your troubleshooting or you leverage a different SQL Server for development purposes-->
      <!---You can easily avoid modifying configuration by adding host file entry if you can't access this SQL server for your development purposes -->
      <property name="connection.connection_string">Data Source=ciserver1.eyefinity.com;Initial Catalog=Blink;Persist Security Info=True;User ID=it2;Password=it2</property>
      <property name="show_sql">false</property>
      <property name="format_sql">false</property>
      <!-- Please do not change following cache setting flag as this has been intentionally turned off for supporting Non-Sticky session - Ankur P-->
      <property name="cache.use_second_level_cache">false</property>
      <!-- Please do not change following cache setting flag as this has been intentionally turned off for supporting Non-Sticky session - Ankur P-->
      <property name="cache.use_query_cache">false</property>
      <property name="cache.provider_class">NHibernate.Caches.SysCache2.SysCacheProvider,NHibernate.Caches.SysCache2</property>
      <property name="generate_statistics">false</property>
      <property name="current_session_context_class">web</property>
      <mapping assembly="IT2.DataAccess" />
      <mapping assembly="DocumentStorage" />
      <mapping assembly="FeatureManager" />
    </session-factory>
  </hibernate-configuration>
</configuration>